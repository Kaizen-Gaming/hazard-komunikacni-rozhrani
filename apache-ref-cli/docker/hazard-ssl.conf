SSLCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES
SSLProxyCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES
SSLHonorCipherOrder on 
SSLProtocol all -SSLv3
SSLProxyProtocol all -SSLv3
SSLPassPhraseDialog  builtin
SSLSessionCache        "shmcb:/usr/local/apache2/logs/ssl_scache(512000)"
SSLSessionCacheTimeout  300

ServerName ${DOMAIN_NAME}

<VirtualHost _default_:443>

	AddHandler cgi-script .cgi
	Alias /debug-certificate /var/www/debug-certificate
	<Directory "/var/www/debug-certificate">
		SSLVerifyClient require
		SSLVerifyDepth  3
		SSLOptions +StdEnvVars +ExportCertData
		Require all granted
	    Options ExecCGI
	</Directory>


	<Directory "/var/www/html">
		Require all granted
	</Directory>


	ServerName ${DOMAIN_NAME}:443
	ServerAdmin ${ADMIN_EMAIL}

	SSLEngine on
	


	SSLCertificateFile "certs/server.crt"
	SSLCertificateKeyFile "certs/server.key"

	# certifikacni autorita MF 
	# certifikacni autorita pro klientskou autentizaci z registrace
	SSLCACertificateFile "certs/client-ca-auth.pem"

    


	<Location ~ /data/.* >
		SSLVerifyClient require
		SSLVerifyDepth  3
		SSLOptions +StdEnvVars +ExportCertData
	    <RequireAny>  
#	    	<RequireAll>
		        # certifikaty opravnenych uzivatelu provozovatele - napriklad tytez, ktere predava k registraci
		        # ziskane pomoci 
		        #    pro SSL_CLIENT_S_DN -  openssl x509 -subject -noout | sed -e "s/subject=//"
		        #    pro SSL_CLIENT_I_DN -  openssl x509 -issuer -noout | sed -e "s/issuer=//"
		        #Require expr %{SSL_CLIENT_S_DN} == 'CN=SPCSS Playground AM AISG Autentizacni CGI'
		        #Require expr %{SSL_CLIENT_I_DN} == 'CN=SPCSS Playground AM AISG CA'
#	        </RequireAll>

	        # nebo je mozno pouzit celou hodnotu certifikatu ze souboru
	        # certifikat v sounru musi byt ve formatu PEM tak, jak jej exportuje openssl -in cert.cer -inform (DER nebo PEM) -out client.pem
	        Require expr %{SSL_CLIENT_CERT} == file('/etc/apache2/certs/client-cgi.pem')
	        Require expr %{SSL_CLIENT_CERT} == file('/etc/apache2/certs/client-spcss.pem')

	    </RequireAny>
	</Location>

	Alias /notify /notify.cgi
	<Directory  /notify.cgi>
        Options ExecCGI
	</Directory>

	<Location ~ /notify.* >
		SSLVerifyClient require
		SSLVerifyDepth  3
		SSLOptions +StdEnvVars +ExportCertData
	
	    <RequireAny>  
	        Require expr %{SSL_CLIENT_CERT} == file('/etc/apache2/certs/client-cgi.pem')
	        Require expr %{SSL_CLIENT_CERT} == file('/etc/apache2/certs/client-spcss.pem')
	    </RequireAny>
	</Location>




</VirtualHost>       



# http je dostupna pouze slozka pro overovani vlastnictvi domeny pro vydani certifikatu serveru
<VirtualHost _default_:80>
  ServerName ${DOMAIN_NAME}:80
  DocumentRoot "/acme"

  <Location "/.well-known/acme-challenge">
    Require all granted
  </Location>
</VirtualHost>